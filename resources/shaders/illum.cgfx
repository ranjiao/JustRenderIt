float4x4 ModelView;
float4x4 Projection;
float TimeElapsed;
float3 LightPosition;
float3 EyePosition;

float3 DiffuseColor<
	string type = "color";
	float3 minValue = float3(0,0,0);
	float3 maxValue = float3(10,10,10);
> = { 1, 1, 1 };

sampler2D TexDiffuse = sampler_state
{
  generateMipMap = true;
  minFilter = LinearMipMapLinear;
  magFilter = Linear;
};

void VS_Main(float4 inPos : POSITION,
             float2 inTexCoord : TEXCOORD0,
             float4 inNormal : NORMAL,
             out float4 outPos : POSITION,
             out float2 outTexCoord : TEXCOORD0,
             // out float3 outLightDirection : TEXCOORD1,
             // out float3 outEyeDirection : TEXCOORD2,
             // out float3 outNormal : TEXCOORD3,
             uniform float4x4 inMatModelView,
             uniform float4x4 inMatProj)
{
  outTexCoord = inTexCoord;
  float4 posMV = mul(inMatModelView, inPos);
  outPos = mul(inMatProj, posMV);
}

void PS_Main(in float2 inTexCoord : TEXCOORD0,
             // in float3 inLightDirection : TEXCOORD1,
             // in float3 inEyeDirection : TEXCOORD2,
             // out float4 outColor : COLOR,
             uniform sampler2D inTexDiffuse)
{
  float4 diffuse = tex2D(inTexDiffuse, inTexCoord);

  outColor = diffuse;
}

technique t1 
{
  pass p0
  {
    VertexProgram = compile vp30 VS_Main(ModelView, Projection);
    FragmentProgram = compile fp30 PS_Main(TexDiffuse);
  }
}
